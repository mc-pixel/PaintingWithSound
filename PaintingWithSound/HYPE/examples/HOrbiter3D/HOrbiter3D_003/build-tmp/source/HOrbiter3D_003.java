/* autogenerated by Processing revision 1283 on 2022-07-26 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import hype.*;
import hype.extended.behavior.HOrbiter3D;
import hype.extended.behavior.HTimer;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class HOrbiter3D_003 extends PApplet {





HDrawablePool pool;
HTimer        timerPool;

 public void setup() {
	/* size commented out by preprocessor */;
	H.init(this).background(0xFF242424).use3D(true);

	pool = new HDrawablePool(42);
	pool.autoAddToStage()
		.add(new HRect(50).rounding(10))
		.onCreate(
			new HCallback() {
				public void run(Object obj) {
					HDrawable d = (HDrawable) obj;
					d.stroke(0xFF000000, 50).fill(0xFFFF3300).anchorAt(H.CENTER).rotation(45).loc(width/2,height/2);

					HOrbiter3D orb = new HOrbiter3D(width/2, height/2, 0)
						.target(d)
						.zSpeed(1.5f)
						.ySpeed(0.2f)
						.radius(250)
					;
				}
			}
		)
	;

	timerPool = new HTimer()
		.numCycles( pool.numActive() )
		.interval(75)
		.callback(
			new HCallback() { 
				public void run(Object obj) {
					pool.request();
				}
			}
		)
	;
}

 public void draw() {
	H.drawStage();

	//simple sphere mesh to show orbit range
	pushMatrix();
		translate(width/2, height/2, 0);
		stroke(0xFF666666);
		noFill();
		sphereDetail(20);
		sphere(200);
	popMatrix();
}


  public void settings() { size(640, 640, P3D); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "HOrbiter3D_003" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
