/* autogenerated by Processing revision 1283 on 2022-07-26 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import hype.*;
import hype.extended.behavior.HSwarm;
import hype.extended.behavior.HTimer;
import hype.extended.colorist.HColorPool;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class HSwarm_004 extends PApplet {






HSwarm        swarm;
HDrawablePool pool;
HTimer        timer;

 public void setup() {
	/* size commented out by preprocessor */;
	H.init(this).background(0xFF242424).autoClear(false);

	swarm = new HSwarm()
		.addGoal(H.mouse())
		.speed(5)
		.turnEase(0.05f)
		.twitch(20)
	;

	pool = new HDrawablePool(40);
	pool.autoAddToStage()
		.add(new HRect().rounding(4))
		.colorist(new HColorPool(0xFFFFFFFF, 0xFFF7F7F7, 0xFFECECEC, 0xFF333333, 0xFF0095A8, 0xFF00616F, 0xFFFF3300, 0xFFFF6600).fillOnly())
		.onCreate(
			new HCallback() {
				public void run(Object obj) {
					HDrawable d = (HDrawable) obj;
					d
						.strokeWeight(2)
						.stroke(0xFF000000, 100)
						.size((int)random(10,20), (int)random(2,6) )
						.loc(width/2, height/2)
						.anchorAt(H.CENTER)
					;

					swarm.addTarget(d);
				}
			}
		)
	;

	timer = new HTimer()
		.numCycles( pool.numActive() )
		.interval(250)
		.callback(
			new HCallback() { 
				public void run(Object obj) {
					pool.request();
				}
			}
		)
	;
}

 public void draw() {
	H.drawStage();
}


  public void settings() { size(640, 640); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "HSwarm_004" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
