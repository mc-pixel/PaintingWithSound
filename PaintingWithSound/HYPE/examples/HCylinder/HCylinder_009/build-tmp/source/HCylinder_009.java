/* autogenerated by Processing revision 1283 on 2022-08-07 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import hype.*;
import hype.extended.behavior.HOscillator;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class HCylinder_009 extends PApplet {




HImage        t1;
int           cSize = 250;
HDrawablePool pool;

 public void setup() {
	/* size commented out by preprocessor */;
	H.init(this).background(0xFF242424).use3D(true);

	t1 = new HImage("tex5.png");

	pool = new HDrawablePool(25);
	pool.autoAddToStage()
		.add( new HCylinder().texture(t1) )
		.onCreate(
			new HCallback() {
				public void run(Object obj) {
					int i = pool.currentIndex();

					HCylinder d = (HCylinder) obj;
					d
						.depth(cSize)
						.width(cSize)
						.height(cSize)
						.strokeWeight(1)
						.stroke(0xFFCCCCCC, 225)
						.fill(0xFFFF3300, 225)
						.loc(width/2, height/2)
					;

					new HOscillator().target(d).property(H.ROTATIONX).range(-360, 360).speed(0.1f).freq(1).currentStep(i*1.25f).waveform(H.SINE);
					new HOscillator().target(d).property(H.ROTATIONY).range(-360, 360).speed(0.2f).freq(1).currentStep(i*1.25f).waveform(H.SINE);
					new HOscillator().target(d).property(H.ROTATIONZ).range(-360, 360).speed(0.3f).freq(1).currentStep(i*1.25f).waveform(H.SINE);

				}
			}
		)
		.requestAll()
	;
}

 public void draw() {
	lights();
	H.drawStage();
}


  public void settings() { size(640, 640, P3D); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "HCylinder_009" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
