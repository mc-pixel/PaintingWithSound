/* autogenerated by Processing revision 1283 on 2022-07-20 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import hype.*;
import hype.extended.layout.HCircleLayout;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class build extends PApplet {




int    stageW     = 1000;
int    stageH     = 1000;
int  clrBG      = 0xFF242424;
String pathAssets = "../../../assets/";

int numAssets = 50;

PVector[]pos = new PVector[numAssets];

int layoutRadius = 200;
int layoutStartX = stageW/2;
int layoutStartY = stageH/2;
float layoutStep = 360.0f/numAssets;

HCircleLayout layout;

 public void settings() {
	size(stageW, stageH, P3D);
}

 public void setup() {
	H.init(this);
	background(clrBG);
	layout = new HCircleLayout().startX(layoutStartX).startY(layoutStartY).radius(layoutRadius).angleStep(layoutStep)/*.useNoise(true)*/;

	for (int i = 0; i < numAssets; ++i) {
		pos[i] = layout.getNextPoint();
		
	}
}

 public void draw() {
	background(clrBG);

	for (int i = 0; i < numAssets; ++i) {

		push();
		translate(pos[i].x,pos[i].y,pos[i].z);
		//rotate(radians(90)+(layout.angleStepRad()*i));
		rotate((layout.angleStepRad()*i));
		rect(0,0,5,1000);
		pop();
		
	}

}


  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "build" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
