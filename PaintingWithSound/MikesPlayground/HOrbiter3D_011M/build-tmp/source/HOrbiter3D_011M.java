/* autogenerated by Processing revision 1283 on 2022-08-07 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import hype.*;
import hype.extended.behavior.HSwarm;
import hype.extended.behavior.HTimer;
import hype.extended.colorist.HColorPool;
import hype.extended.behavior.HOrbiter3D;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class HOrbiter3D_011M extends PApplet {







HOrbiter3D 	  orb;
HSwarm        swarm;
HDrawablePool pool;
HTimer        timer;


 public void setup() {
	/* size commented out by preprocessor */;
	H.init(this).background(0xFF242424).use3D(true);

	orb = new HOrbiter3D(width/2, height/2, 0)
		.zSpeed(1.5f)
		.ySpeed(0.3f)
		.radius(250)
	;
	/****swarm***/

	swarm = new HSwarm()
		.addGoal(width/2,height/2)
		.speed(5)
		.turnEase(0.05f)
		.twitch(20)
	;

	pool = new HDrawablePool(40);
	pool.autoAddToStage()
		.add(new HRect().rounding(4).size(18,6))
		.colorist(new HColorPool(0xFFFFFFFF, 0xFFF7F7F7, 0xFFECECEC, 0xFF333333, 0xFF0095A8, 0xFF00616F, 0xFFFF3300, 0xFFFF6600).fillOnly())
		.onCreate(
			new HCallback() {
				public void run(Object obj) {
					HDrawable d = (HDrawable) obj;
					d
						.noStroke()
						.loc(500, 100)
						.anchorAt(H.CENTER)
					;
//runbehaviour search this
					swarm.addTarget(d);
				}
			}
		)
	;

	timer = new HTimer()
		.numCycles( pool.numActive() )
		.interval(250)
		.callback(
			new HCallback() { 
				public void run(Object obj) {
					pool.request();
				}
			}
		)
	;

	/**swarm***/
}

 public void draw() {
	background(0xFF242424);

	orb._run();
	PVector pt = orb.getNextPoint();
	
	//simple sphere mesh to show orbit range
	pushMatrix();
		translate(width/2, height/2, 0);
		stroke(0xFF666666);
		noFill();
		sphereDetail(20);
		sphere(200);
	popMatrix();

	//draw a line from current orbit point to next orbit point
	stroke(0xFFFF3300);
	beginShape(LINES);
		vertex(orb.x(), orb.y(), orb.z());
		vertex(pt.x, pt.y, pt.z);
	endShape();


}
/*************************************************************swarm*//////////////////



 public void setup() {
}

 public void draw() {
	H.drawStage();

	// draw an ellipse to show swarm point
	noFill(); strokeWeight(2); stroke(0xFF0095A8);
	ellipse(width/2, height/2, 4, 4);

	// draw an ellipse to show creation point
	noFill(); strokeWeight(2); stroke(0xFFFF3300);
	ellipse(500, 100, 4, 4);
}


  public void settings() { size(640, 640, P3D); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "HOrbiter3D_011M" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
